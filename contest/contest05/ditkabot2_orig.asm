info: DitkaBot2, Max Mammel, 630 706-4742, Chicago, IL

//r0-r3, use as locals
//r4 = use as param
//r5 = vdir [0|1]
//r6 = hdir [2|3]
//r7
//r8 = hi/lo food indicator
//r9
//r12 = xholder
//r13 = yholder

//[837] = friend tag (0xff10)
//[1037] = badfood_lo
//[1137] = badfood_hi
//[1237] = collection y col

jumper:
  jmp main
  jmp main
  jmp main

buffer:
  data { 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 }

main:
  mov [837], 0xff10 
  mov [1137], 0
  mov [1037], 0
  mov [1237], 0x4528
  rand r3, 2
  mov r5, r3
  rand r3, 2
  add r3, 2
  mov r6, r3

eater:
  jmp vtravel

eatfood:
  sense r0
  cmp r0, 0xFFFF
  je oncollect
  cmp r0, 32
  jg return
  cmp r0, 1
  jl return
  cmp r0, 16
  jg food_hi
food_lo:
  mov r8, 0
  sub r0, 1
  mov r1, 1
  shl r1, r0     //r1 contains the bit id of the food
  test r1, [1037]
  jne return     //this is bad food
  jmp do_eat
food_hi:
  mov r8, 1
  sub r0, 17
  mov r1, 1
  shl r1, r0     //r1 contains the bit id of the food
  test r1, [1137]
  jne return     //this is bad food
do_eat:
  mov r2, 0
  cksum r2, 3599
  eat
  jns find_collection
  mov r3, 0
  cksum r3, 3599
  cmp r2, r3
  jne badfood
  ret
badfood:
  cmp r8, 0
  je lo_mark
  or [1137], r1
  jmp return
lo_mark:
  or [1037], r1
  jmp return
oncollect:
  mov [1237], 0
  getxy r10, r11
  shl r10, 8
  or [1237], r10
  or [1237], r11
  energy r1
  cmp r1, 10000
  jl return
  div r1, 5
  release r1
return:
  ret

vtravel:
  travel r5
  jns nvtravel
  call eatfood
  jmp htravel
nvtravel:
  mov r4, r5
  call try_infect
  cmp r5, 0
  je set_south
  mov r5, 0
  jmp htravel
set_south:
  mov r5, 1
  jmp htravel
  
htravel:
  travel r6
  jns nhtravel
  call eatfood
  jmp vtravel
nhtravel:
  mov r4, r6
  call try_infect
  cmp r6, 2
  je set_west
  mov r6, 2
  jmp vtravel
set_west:
  mov r6, 3
  jmp vtravel
 
try_infect:
  mov r1, r4
  peek r1, 837
  jns done_infect
  cmp r1, 0xff10
  je friend
  rand r2, 30
  mult r2, 3
  mov r0, 6
  poke r4, r2
  jns done_infect
  mov r0, r2
  add r2, 1
  poke r4, r2
done_infect:
  ret
friend:
  cmp [1237], 0x4528
  jne get_food_info
  mov r1, r4
  peek r1, 1237
  jns done_infect
  mov [1237], r1
get_food_info:
  mov r1, r4
  peek r1, 1037
  jns done_infect
  or r1, [1037]
  mov [1037], r1
  mov r1, r4
  peek r1, 1137
  jns done_infect
  or r1, [1137]
  mov [1137], r1
  charge r4, 2000
  ret

find_collection:
  cmp [1237], 0x4528
  je return
  getxy r0, r1
  mov r10, 0xFF00
  and r10, [1237]
  shr r10, 8
  mov r11, 0x00FF
  and r11, [1237]
hfind:
  mov r2, 1
  cmp r10, r0
  je vfind
  jl wfind
  jg efind
wfind:    
  travel 3
  jns fstuck
  sub r0, 1
  jmp hfind
efind:
  travel 2
  jns fstuck
  add r0, 1
  jmp hfind
vfind:
  mov r2, 0
  cmp r11, r1
  je check_found
  jl nfind
  jg sfind
sfind:
  travel 1
  jns fstuck
  add r1, 1
  jmp vfind
nfind:
  travel 0
  jns fstuck
  sub r1, 1
  jmp vfind
check_found:
  getxy r0, r1
  cmp r10, r0
  jne hfind
  cmp r11, r1
  jne vfind
  release 25000
  jmp return
fstuck:
  rand r2, 4
  travel r2
  travel r2
  rand r2, 4
  travel r2
  travel r2
  rand r2, 4
  travel r2
  travel r2
  rand r2, 4
  travel r2
  travel r2
jmp find_collection

drone:
  data{ 0x6020 0x0000 0x0004 0x401B 0x0000 0x0000 0x001F 0x0000 0x0000 0x401B 0x0000 0x0000 0x001F 0x0000 0x0000 0x401B 0x0000 0x0000 0x001F 0x0000 0x0000 0x401B 0x0000 0x0000 0x001F 0x0000 0x0000 0x401E 0x0001 0x0000 0x6017 0x0001 0xFFFF 0x800C 0xFFDF 0x0000 0x401A 0x0002 0x0000 0x6012 0x0002 0x0005 0x4021 0x0002 0x0000 0x8006 0xFFD3 }
end_drone:
  data{ 0xFFFF }