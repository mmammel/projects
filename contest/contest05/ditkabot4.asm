info: DitkaBot4, Max Mammel, 630 706-4742, Chicago, IL

//r0-r3, use as locals
//r4 = use as param
//r5 = vdir [0|1]
//r6 = hdir [2|3]
//r7 = first_infect count
//r8 = hi/lo food indicator
//r9 = 
//r12 = xholder
//r13 = yholder

//[1437] = friend tag (0xff10) in progress (0xff11) droned (0xff12)
//[1337] = badfood_lo
//[1737] = badfood_hi
//[1537] = goodfood_lo
//[1637] = goodfood_hi
//[1237] = collection y col

jumper:
  jmp main
  jmp main
  jmp main

buffer:
  data { 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 }

main:
  mov r7, 0
  mov [1437], 0xff10 
  mov [1337], 0  //bad lo
  mov [1737], 0  //bad hi
  mov [1537], 0  //good lo
  mov [1637], 0  //good hi
  mov [1237], 0x4528
  rand r5, 2
  rand r6, 2
  add r6, 2
  rand r0, 11
  cmp r0, 4
  jl flip
  jmp primary
flip:
  mov r0, r5
  mov r5, r6
  mov r6, r0
eater:
  jmp primary

eatfood:
  sense r0
  cmp r0, 0xFFFF
  je oncollect
  cmp r0, 32
  jg return
  cmp r0, 1
  jl return
  cmp r0, 16
  jg food_hi
food_lo:
  mov r8, 0
  sub r0, 1
  mov r1, 1
  shl r1, r0     //r1 contains the bit id of the food
  test r1, [1337]
  jne return     //this is bad food
  test r1, [1537]
  jne do_safe_eat  //this is good food
  jmp do_eat
food_hi:
  mov r8, 1
  sub r0, 17
  mov r1, 1
  shl r1, r0     //r1 contains the bit id of the food
  test r1, [1737]
  jne return     //this is bad food
  test r1, [1637]
  jne do_safe_eat  //this is good food
do_eat:
  mov r2, 0
  cksum r2, 3599
  eat
  jns find_collection
  mov r3, 0
  cksum r3, 3599
  cmp r2, r3
  jne badfood
  jmp goodfood
do_safe_eat:
  eat
  jns find_collection
  jmp return
badfood:
  cmp r8, 0
  je lo_mark
  or [1737], r1
  jmp return
lo_mark:
  or [1337], r1
  jmp return
goodfood:
  cmp r8, 0
  je lo_mark_good
  or [1637], r1
  jmp return
lo_mark_good:
  or [1537], r1
  jmp return
oncollect:
  mov [1237], 0
  getxy r10, r11
  shl r10, 8
  or [1237], r10
  or [1237], r11
return:
  ret

primary:
  travel r5
  jns primary_obstruct
  call eatfood
  jmp primary

primary_obstruct:
  getxy [pos2], [pos1]
  mov r1, r5
  and r1, 2
  shr r1, 1
  cmp [pos1 + r1], 0
  je primary_switch
  cmp [pos1 + r1], [lim1 + r1]
  je primary_switch
  mov r4, r5
  call try_infect
  mov r0, r5
  and r0, 1
  cmp r0, 1
  je panic
  jmp secondary

primary_switch:
  xor r5, 1
  jmp secondary
  
secondary:
  travel r6
  jns secondary_switch
  call eatfood
  jmp primary

secondary_switch:
  mov r4, r6
  call try_infect
  xor r6, 1
  jmp primary

panic:
  rand r0, 4
  travel r0
  jns panic
  call eatfood
  jmp primary
 
try_infect:
  mov r1, r4
  peek r1, 1437
  jns done_infect
  cmp r1, 0xff10
  je friend
  cmp r1, 0xff12
  je drone_friend
first_infect:
  cmp r7, 3
  je primary_infect
  rand r2, 30
  mult r2, 3
  mov r0, 6
  poke r4, r2
  jns done_infect
  mov r0, r2
  add r2, 1
  poke r4, r2
  jns done_infect
  add r7, 1
  jmp done_infect
primary_infect:
  mov r3, 0  //counter
  mov r2, drone
infect_loop:
  cmp r2, end_drone
  je finish_infect
  mov r0, [r2]
  poke r4, r3
  jns done_infect
  add r3, 1
  add r2, 1
  jmp infect_loop
finish_infect:
  mov r0, 0xff12
  poke r4, 1437
  mov r0, [1237]
  poke r4, 1237
  mov r0, [1337]
  poke r4, 1337
  mov r0, [1737]
  poke r4, 1737
  energy r2
  div r2, 5
  charge r4, r2
done_infect:
  ret
drone_friend:
  mov r0, [1337]
  poke r4, 1337
  mov r0, [1737]
  poke r4, 1737
  energy r2
  div r2, 5
  charge r4, r2  
  ret
friend:
  cmp [1237], 0x4528
  jne get_food_info
  mov r1, r4
  peek r1, 1237
  jns done_infect
  mov [1237], r1
get_food_info:
  mov r1, r4
  peek r1, 1337
  jns done_infect
  or r1, [1337]
  mov [1337], r1
  mov r1, r4
  peek r1, 1737
  jns done_infect
  or r1, [1737]
  mov [1737], r1
  rand r1, 5
  cmp r1, 3
  jne done_infect
  charge r4, 2000
  ret

find_collection:
  cmp [1237], 0x4528
  je return
  getxy r0, r1
  mov r10, 0xFF00
  and r10, [1237]
  shr r10, 8
  mov r11, 0x00FF
  and r11, [1237]
hfind:
  mov r2, 1
  cmp r10, r0
  je vfind
  jl wfind
  jg efind
wfind:    
  travel 3
  jns fstuck
  sub r0, 1
  jmp hfind
efind:
  travel 2
  jns fstuck
  add r0, 1
  jmp hfind
vfind:
  mov r2, 0
  cmp r11, r1
  je check_found
  jl nfind
  jg sfind
sfind:
  travel 1
  jns fstuck
  add r1, 1
  jmp vfind
nfind:
  travel 0
  jns fstuck
  sub r1, 1
  jmp vfind
check_found:
  getxy r0, r1
  cmp r10, r0
  jne hfind
  cmp r11, r1
  jne vfind
  energy r2
  sub r2, 10000
  release r2
  jmp return
fstuck:
  rand r2, 4
  travel r2
  rand r2, 4
  travel r2
  rand r2, 4
  travel r2
  rand r2, 4
  travel r2
jmp find_collection

pos1:
  data { 0 }
pos2:
  data { 0 }
lim1:
  data { 39 }
lim2:
  data { 69 }
  
drone:
  data { 0x6020 0x0008 0x0014
  0x6020 0x0009 0x0002
  0x6001 0x000A 0x0000
  0x5017 0x000A 0x0008
  0x800B 0x0012 0x0000
  0x401B 0x0009 0x0000
  0x800E 0x000C 0x0000
  0x8004 0x002A 0x0000
  0x600F 0x000A 0x0001
  0x8006 0xFFEE 0x0000
  0x6020 0x0009 0x0002
  0x600F 0x0009 0x0002
  0x6020 0x0008 0x000A
  0x6001 0x000A 0x0000
  0x5017 0x000A 0x0008
  0x800B 0xFFD6 0x0000
  0x401B 0x0009 0x0000
  0x800E 0xFFD0 0x0000
  0x8004 0x0009 0x0000
  0x600F 0x000A 0x0001
  0x8006 0xFFEE 0x0000
  0x401E 0x0000 0x0000
  0x6017 0x0000 0xFFFF
  0x800B 0x003C 0x0000
  0x6017 0x0000 0x0010
  0x8009 0x001B 0x0000
  0x6017 0x0000 0x0001
  0x8007 0x0042 0x0000
  0x6010 0x0000 0x0001
  0x6001 0x0001 0x0001
  0x501C 0x0001 0x0000
  0x4018 0x0001 0x0539
  0x800B 0x0033 0x0000
  0x8006 0x0015 0x0000
  0x6010 0x0000 0x0011
  0x6001 0x0001 0x0001
  0x501C 0x0001 0x0000
  0x4018 0x0001 0x06C9
  0x800B 0x0021 0x0000
  0x8006 0x0003 0x0000
  0x001F 0x0000 0x0000
  0x800E 0x001B 0x0000
  0x8006 0x0015 0x0000
  0x2001 0x04D5 0x0000
  0x5019 0x000A 0x000B
  0x601C 0x000A 0x0008
  0x1015 0x04D5 0x000A
  0x1015 0x04D5 0x000B
  0x8021 0x07D0 0x0000
  0x0005 0x0000 0x0000
  0x2017 0x04D5 0x4528
  0x800B 0xFFFA 0x0000
  0x5019 0x0000 0x0001
  0x6001 0x000A 0xFF00
  0x4014 0x000A 0x04D5
  0x601D 0x000A 0x0008
  0x6001 0x000B 0x00FF
  0x4014 0x000B 0x04D5
  0x6001 0x0002 0x0001
  0x5017 0x000A 0x0000
  0x800B 0x0021 0x0000
  0x8007 0x0006 0x0000
  0x8009 0x000F 0x0000
  0x801B 0x0003 0x0000
  0x800E 0x0051 0x0000
  0x6010 0x0000 0x0001
  0x8006 0xFFE8 0x0000
  0x801B 0x0002 0x0000
  0x800E 0x0045 0x0000
  0x600F 0x0000 0x0001
  0x8006 0xFFDC 0x0000
  0x6001 0x0002 0x0000
  0x5017 0x000B 0x0001
  0x800B 0x0021 0x0000
  0x8007 0x0012 0x0000
  0x8009 0x0003 0x0000
  0x801B 0x0001 0x0000
  0x800E 0x002A 0x0000
  0x600F 0x0001 0x0001
  0x8006 0xFFE8 0x0000
  0x801B 0x0000 0x0000
  0x800E 0x001E 0x0000
  0x6010 0x0001 0x0001
  0x8006 0xFFDC 0x0000
  0x5019 0x0000 0x0001
  0x5017 0x000A 0x0000
  0x800C 0xFFAC 0x0000
  0x5017 0x000B 0x0001
  0x800C 0xFFCD 0x0000
  0x8021 0x9C40 0x0000
  0x8006 0xFF85 0x0000
  0x6020 0x0002 0x0004
  0x401B 0x0002 0x0000
  0x6020 0x0002 0x0004
  0x401B 0x0002 0x0000
  0x6020 0x0002 0x0004
  0x401B 0x0002 0x0000
  0x6020 0x0002 0x0004
  0x401B 0x0002 0x0000
  0x8006 0xFF6D 0x0000 }
end_drone:
  data{ 0xFFFF }
  