info: DitkaBot2, Max Mammel, 630 706-4742, Chicago, IL

//r0-r3, use as locals
//r4 = use as param
//r5 = times to travel
//r6 = travel counter
//r7 = first_infect count
//r8 = hi/lo food indicator
//r9 = 
//r12 = xholder
//r13 = yholder

//[837] = friend tag (0xff10) in progress (0xff11) droned (0xff12)
//[1037] = badfood_lo
//[1137] = badfood_hi
//[1237] = collection y col

jumper:
  jmp main
  jmp main
  jmp main

buffer:
  data { 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 }

main:
  mov r7, 0
  mov r5, 4
  mov [937], 0xff10 
  mov [1137], 0
  mov [1037], 0
  mov [1237], 0x4528
main_loop:
  rand r4, 4
  mov r6, 0
main_loop_inner:
  cmp r6, r5
  jge main_loop
  travel r4
  jns try_infect
  call eatfood
  add r6, 1
  jmp main_loop_inner

eatfood:
  sense r0
  cmp r0, 0xFFFF
  je oncollect
  cmp r0, 32
  jg return
  cmp r0, 1
  jl return
  cmp r0, 16
  jg food_hi
food_lo:
  mov r8, 0
  sub r0, 1
  mov r1, 1
  shl r1, r0     //r1 contains the bit id of the food
  test r1, [1037]
  jne return     //this is bad food
  jmp do_eat
food_hi:
  mov r8, 1
  sub r0, 17
  mov r1, 1
  shl r1, r0     //r1 contains the bit id of the food
  test r1, [1137]
  jne return     //this is bad food
do_eat:
  mov r2, 0
  cksum r2, 3599
  eat
  jns find_collection
  mov r3, 0
  cksum r3, 3599
  cmp r2, r3
  jne badfood
  ret
badfood:
  cmp r8, 0
  je lo_mark
  or [1137], r1
  jmp return
lo_mark:
  or [1037], r1
  jmp return
oncollect:
  mov [1237], 0
  getxy r10, r11
  shl r10, 8
  or [1237], r10
  or [1237], r11
  energy r1
  cmp r1, 10000
  jl return
  div r1, 5
  release r1
return:
  ret
 
try_infect:
  mov r1, r4
  peek r1, 937
  jns done_infect
  cmp r1, 0xff10
  je friend
  cmp r1, 0xff11
  jge done_infect
first_infect:
  cmp r7, 3
  je primary_infect
  rand r2, 30
  mult r2, 3
  mov r0, 6
  poke r4, r2
  jns done_infect
  mov r0, r2
  add r2, 1
  poke r4, r2
  jns done_infect
  add r7, 1
  jmp done_infect
primary_infect:
  mov r3, 0  //counter
  mov r2, drone
infect_loop:
  cmp r2, end_drone
  je finish_infect
  mov r0, [r2]
  poke r4, r3
  jns done_infect
  add r3, 1
  add r2, 1
  jmp infect_loop
finish_infect:
  mov r0, 0xff12
  poke r4, 937
  charge r4, 3000
done_infect:
  jmp main_loop_inner
friend:
  cmp [1237], 0x4528
  jne get_food_info
  mov r1, r4
  peek r1, 1237
  jns done_infect
  mov [1237], r1
get_food_info:
  mov r1, r4
  peek r1, 1037
  jns done_infect
  or r1, [1037]
  mov [1037], r1
  mov r1, r4
  peek r1, 1137
  jns done_infect
  or r1, [1137]
  mov [1137], r1
  charge r4, 2000
  jmp main_loop_inner

find_collection:
  cmp [1237], 0x4528
  je return
  getxy r0, r1
  mov r10, 0xFF00
  and r10, [1237]
  shr r10, 8
  mov r11, 0x00FF
  and r11, [1237]
hfind:
  mov r2, 1
  cmp r10, r0
  je vfind
  jl wfind
  jg efind
wfind:    
  travel 3
  jns fstuck
  sub r0, 1
  jmp hfind
efind:
  travel 2
  jns fstuck
  add r0, 1
  jmp hfind
vfind:
  mov r2, 0
  cmp r11, r1
  je check_found
  jl nfind
  jg sfind
sfind:
  travel 1
  jns fstuck
  add r1, 1
  jmp vfind
nfind:
  travel 0
  jns fstuck
  sub r1, 1
  jmp vfind
check_found:
  getxy r0, r1
  cmp r10, r0
  jne hfind
  cmp r11, r1
  jne vfind
  release 25000
  jmp return
fstuck:
  rand r2, 4
  travel r2
  //travel r2
  rand r2, 4
  travel r2
  //travel r2
  rand r2, 4
  travel r2
  //travel r2
  rand r2, 4
  travel r2
  //travel r2
jmp find_collection

drone:
  data{ 0x6020 0x0000 0x0004 0x401B 0x0000 0x0000 0x001F 0x0000 0x0000 0x401B 0x0000 0x0000 0x001F 0x0000 0x0000 0x401B 0x0000 0x0000 0x001F 0x0000 0x0000 0x401B 0x0000 0x0000 0x001F 0x0000 0x0000 0x401E 0x0001 0x0000 0x6017 0x0001 0xFFFF 0x800C 0xFFDF 0x0000 0x401A 0x0002 0x0000 0x6012 0x0002 0x0005 0x4021 0x0002 0x0000 0x8006 0xFFD3 0x0000 0x8006 0xFFD0 0x0000 0x8006 0xFFCD 0x0000 0x8006 0xFFCA 0x0000 0x8006 0xFFC7 0x0000 0x8006 0xFFC4 0x0000 0x8006 0xFFC1 0x0000 }
end_drone:
  data{ 0xFFFF }
  